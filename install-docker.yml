---
- name: Install and configure Docker, Docker Compose, and Docker SDK for Python
  hosts: all
  become: true

  vars:
    docker_compose_version: "v2.24.6"

  tasks:
    - name: Remove any old or broken Docker Python packages
      pip:
        name:
          - docker
          - docker-py
          - docker-pycreds
        state: absent
        executable: pip3

    - name: Install required system packages
      package:
        name:
          - yum-utils
          - curl
          - device-mapper-persistent-data
          - lvm2
        state: present

    - name: Add Docker CE repository
      command: >
        dnf config-manager --add-repo=https://download.docker.com/linux/centos/docker-ce.repo
      args:
        creates: /etc/yum.repos.d/docker-ce.repo

    - name: Install Docker engine and CLI
      package:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
        state: latest

    - name: Start and enable Docker service
      service:
        name: docker
        enabled: yes
        state: started

    - name: Add current user to docker group
      user:
        name: "{{ ansible_user_id }}"
        groups: docker
        append: yes

    - name: Set permissions on Docker socket (DEV/TEST only)
      file:
        path: /var/run/docker.sock
        mode: '0666'

    - name: Install latest Docker SDK for Python
      pip:
        name: docker
        state: latest
        executable: pip3

    - name: Install Docker Compose
      get_url:
        url: "https://github.com/docker/compose/releases/download/{{ docker_compose_version }}/docker-compose-linux-x86_64"
        dest: /usr/local/bin/docker-compose
        mode: '0755'

    - name: Verify Docker Compose version
      command: docker-compose --version
      register: compose_version
      changed_when: false

    - name: Show Docker Compose version
      debug:
        msg: "{{ compose_version.stdout }}"

    - name: Verify Docker SDK connectivity to Docker
      command: >
        python3 -c "import docker; print(docker.from_env().version())"
      register: docker_test
      changed_when: false
      failed_when: docker_test.rc != 0

    - name: Show Docker SDK test result
      debug:
        msg: "{{ docker_test.stdout }}"
